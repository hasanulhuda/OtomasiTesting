<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="2" total="5" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="12728" started-at="2020-06-08T15:31:58 ICT" finished-at="2020-06-08T15:32:11 ICT">
    <groups>
    </groups>
    <test name="D:/Test/OtomasiTesting" duration-ms="12728" started-at="2020-06-08T15:31:58 ICT" finished-at="2020-06-08T15:32:11 ICT">
      <class name="Login">
        <test-method status="PASS" signature="reportSetup()[pri:0, instance:Login@6d4e5011]" name="reportSetup" is-config="true" duration-ms="3126" started-at="2020-06-08T15:31:55 ICT" finished-at="2020-06-08T15:31:58 ICT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportSetup -->
        <test-method status="PASS" signature="register(java.lang.reflect.Method)[pri:0, instance:Login@6d4e5011]" name="register" is-config="true" duration-ms="3" started-at="2020-06-08T15:31:58 ICT" finished-at="2020-06-08T15:31:58 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.halamanAwalKodePos()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="FAIL" signature="halamanAwalKodePos()[pri:1, instance:Login@6d4e5011]" name="halamanAwalKodePos" duration-ms="7680" started-at="2020-06-08T15:31:58 ICT" finished-at="2020-06-08T15:32:06 ICT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Can not set io.appium.java_client.android.AndroidElement field pages.PageObjectHalamanAwal.guideLogin1 to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Can not set io.appium.java_client.android.AndroidElement field pages.PageObjectHalamanAwal.guideLogin1 to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4
at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)
at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)
at sun.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)
at java.lang.reflect.Field.set(Field.java:764)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:117)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at pages.BasePage.<init>(BasePage.java:16)
at pages.PageObjectHalamanAwal.<init>(PageObjectHalamanAwal.java:10)
at Login.halamanAwalKodePos(Login.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- halamanAwalKodePos -->
        <test-method status="PASS" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:Login@6d4e5011]" name="captureStatus" is-config="true" duration-ms="4" started-at="2020-06-08T15:32:06 ICT" finished-at="2020-06-08T15:32:06 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=halamanAwalKodePos status=FAILURE method=Login.halamanAwalKodePos()[pri:1, instance:Login@6d4e5011] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method status="PASS" signature="register(java.lang.reflect.Method)[pri:0, instance:Login@6d4e5011]" name="register" is-config="true" duration-ms="0" started-at="2020-06-08T15:32:06 ICT" finished-at="2020-06-08T15:32:06 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.loginSuccessfull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="FAIL" signature="loginSuccessfull()[pri:4, instance:Login@6d4e5011]" name="loginSuccessfull" duration-ms="5001" started-at="2020-06-08T15:32:06 ICT" finished-at="2020-06-08T15:32:11 ICT">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Can not set io.appium.java_client.android.AndroidElement field pages.PageObjectHalamanLogin.btnLogin to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Can not set io.appium.java_client.android.AndroidElement field pages.PageObjectHalamanLogin.btnLogin to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4
at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)
at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)
at sun.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)
at java.lang.reflect.Field.set(Field.java:764)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:117)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at pages.BasePage.<init>(BasePage.java:16)
at pages.PageObjectHalamanLogin.<init>(PageObjectHalamanLogin.java:11)
at Login.loginSuccessfull(Login.java:103)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSuccessfull -->
        <test-method status="PASS" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:Login@6d4e5011]" name="captureStatus" is-config="true" duration-ms="1" started-at="2020-06-08T15:32:11 ICT" finished-at="2020-06-08T15:32:11 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginSuccessfull status=FAILURE method=Login.loginSuccessfull()[pri:4, instance:Login@6d4e5011] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method status="PASS" signature="register(java.lang.reflect.Method)[pri:0, instance:Login@6d4e5011]" name="register" is-config="true" duration-ms="0" started-at="2020-06-08T15:32:11 ICT" finished-at="2020-06-08T15:32:11 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.logOut()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="PASS" signature="logOut()[pri:5, instance:Login@6d4e5011]" name="logOut" duration-ms="8" started-at="2020-06-08T15:32:11 ICT" finished-at="2020-06-08T15:32:11 ICT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOut -->
        <test-method status="PASS" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:Login@6d4e5011]" name="captureStatus" is-config="true" duration-ms="1" started-at="2020-06-08T15:32:11 ICT" finished-at="2020-06-08T15:32:11 ICT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logOut status=SUCCESS method=Login.logOut()[pri:5, instance:Login@6d4e5011] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method status="PASS" signature="reportTeardown()[pri:0, instance:Login@6d4e5011]" name="reportTeardown" is-config="true" duration-ms="3383" started-at="2020-06-08T15:32:11 ICT" finished-at="2020-06-08T15:32:15 ICT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportTeardown -->
      </class> <!-- Login -->
    </test> <!-- D:/Test/OtomasiTesting -->
  </suite> <!-- Suite -->
</testng-results>
